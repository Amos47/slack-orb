version: 2.1

orbs:
  slack: circleci/slack@dev:alpha

executors:
  cli:
    resource_class: small
    docker:
      - image: circleci/circleci-cli
  lint-condo:
    resource_class: small
    docker:
      - image: singapore/lint-condo
  node:
    resource_class: small
    docker:
      - image: circleci/node

jobs:
  lint:
    executor: lint-condo
    steps:
      - checkout
      - run: yamllint .

  validate:
    executor: cli
    steps:
      - checkout
      - run: circleci orb validate src/@orb.yml

  publish-dev:
    executor: cli
    steps:
      - checkout

      - run:
          name: publish w/branch & sha (for transparency)
          command: circleci orb publish src/@orb.yml circleci/slack@dev:$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

      - run:
          name: publish alpha (for immediate integration testing)
          command: circleci orb publish src/@orb.yml circleci/slack@dev:alpha --token $CIRCLE_TOKEN

  trigger-integration:
    executor: node
    parameters:
      tag:
        type: enum
        default: "integration"
        enum: ["integration", master]
    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "79:ae:f5:10:17:8a:d2:9a:ed:63:5c:b0:92:66:23:49"

      - run:
          name: git config
          command: |
            git config --global user.email "$CIRCLE_USERNAME@users.noreply.github.com"
            git config --global user.name "$CIRCLE_USERNAME"

      - run: |
          INTEGRATION_TAG=<<parameters.tag>>-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
          git tag $INTEGRATION_TAG
          git push origin $INTEGRATION_TAG

  notifytest:
    executor: node
    steps:
      - run: exit 0 #toggle this to force success or status for testing
      - slack/notify:
          message: "notification test for the Slack orb, triggered by *<https://github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/commit/${CIRCLE_SHA1}|commit ${CIRCLE_SHA1}>* on ${CIRCLE_PROJECT_REPONAME}'s *${CIRCLE_BRANCH}* branch (<https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}|workflow here>)"
          color: "#f4aa42"
          mentions: "${ORBS_USER_GROUP_UUID}"

  statustestpass:
    executor: node
    steps:
      - run: exit 0 #toggle this to force success or status for testing
      - slack/status:
          mentions: "${ORBS_USER_GROUP_UUID}"

  # statustestfail:
  #   executor: node
  #   steps:
  #     - run: exit 1 #toggle this to force success or status for testing
  #     - slack/status:
  #         mentions: "${ORBS_USER_GROUP_UUID}"

  dev-promote-prod:
    executor: cli
    steps:
      - checkout
      - run: circleci orb publish promote circleci/slack@dev:$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7} patch --token $CIRCLE_TOKEN

workflows:
  validate_unit-test_dev-deploy:
    jobs:
      - lint

      - validate:
          requires:
            - lint

      - publish-dev:
          requires:
            - validate
          context: orb-publishing

      - trigger-integration:
          name: trigger-integration-dev
          requires:
            - publish-dev
          filters:
            branches:
              ignore: master

      - trigger-integration:
          name: trigger-integration-master
          tag: master
          requires:
            - publish-dev
          filters:
            branches:
              only: master

  integration_test-prod_deploy:
    jobs:
      - notifytest:
          name: notifytest-dev
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /integration-.*/

      - statustestpass:
          name: statustestpass-dev
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /integration-.*/

      - notifytest:
          name: notifytest-master
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-.*/

      - statustestpass:
          name: statustestpass-master
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-.*/

      - dev-promote-prod:
          context: orb-publishing
          requires:
            - notifytest-master
            - statustestpass-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-.*/
